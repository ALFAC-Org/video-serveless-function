name: Build and Deploy Python Lambda with Layer

on:
  push:
    branches:
      - main
    paths:
      - 'video_slicer/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      LAMBDA_BUCKET_NAME: ${{ secrets.LAMBDA_BUCKET_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r video_slicer/requirements.txt

      - name: Zip and upload each file
        run: |
          for file in ${{ steps.find_files.outputs.files }}; do
            dir_name=$(basename $(dirname "$file"))
            zip_name="$dir_name.zip"
            cd "$(dirname "$file")"
            zip -r "$zip_name" . -x "*.git*"
            aws s3 cp "$zip_name" s3://${{ secrets.LAMBDA_BUCKET_NAME }}/"$zip_name"
            cd - # Volta para o diret√≥rio anterior
          done

      - name: Update Lambda function code
        run: |
          for file in ${{ steps.find_files.outputs.files }}; do
            dir_name=$(basename $(dirname "$file"))
            zip_name="$dir_name.zip"
            function_name="$dir_name"
            aws lambda update-function-code --function-name "$function_name" --s3-bucket ${{ secrets.LAMBDA_BUCKET_NAME }} --s3-key "$zip_name"
          done

      - name: Wait for Lambda update to complete
        run: sleep 60

      - name: Update Lambda environment variables
        run: |
          for file in ${{ steps.find_files.outputs.files }}; do
            dir_name=$(basename $(dirname "$file"))
            function_name="$dir_name"
            aws lambda update-function-configuration --function-name "$function_name" --environment "Variables={ALFAC_ORG_EMAIL=${{ env.ALFAC_ORG_EMAIL }},ALFAC_ORG_EMAIL_PASSWORD=${{ secrets.ALFAC_ORG_EMAIL_PASSWORD }}}"
          done